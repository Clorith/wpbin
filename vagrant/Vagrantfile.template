# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|


  # Basic configuration options

  config.vm.box = "ubuntu/trusty64" # provided by VagrantCloud

  config.vm.provider :virtualbox do |vb|
    vb.name = "wpbin"
  end

  config.vm.post_up_message = "Vagrant for WPBin is now running.\nUse `vagrant ssh` to ssh into the VM"



  # Choose your preferred network method:


  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  
  # config.vm.network :forwarded_port, guest: 80, host: 8080


  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  
  # config.vm.network :public_network, ip: "192.168.0.100", auto_correct: true, :bridge => 'en0: Wi-Fi (AirPort)'


  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.

  # config.vm.network :public_network



  # Share the WPBin folder from your host machine to the VM

  # The first argument is the path on the host to the actual folder.
  # The second argument is the path on the guest to mount the folder.
  # And the optional third argument is a set of non-required options.

  config.vm.synced_folder "/host/path/to/wpbin", "/mnt/wpbin", :owner => 'vagrant', :group => 'www-data', :mount_options => ['dmode=775,fmode=775']

  config.vm.provision :ansible do |ansible|
    ansible.playbook = "conf/playbook.yml"
  end
end
